# - name: "Get Vcns"
#   oracle.oci.oci_network_vcn_facts:
#     compartment_id: "{{ oci.compartment_id }}"
#   register: vcn_list

# - name: "Filter the target Vcn"
#   ansible.builtin.set_fact:
#     vcn_id: "{{ vcn_list | community.general.json_query(vcn_filter_expression)}}"
#   vars:
#     vcn_filter_expression: "vcns[?display_name=='{{ oci.vcn.display_name }}'].id | [0]"

- name: "Create or Update a Vcn"
  oracle.oci.oci_network_vcn:
    compartment_id: "{{ oci.compartment_id }}"
    display_name: "{{ oci.vcn.display_name }}"
    cidr_block: "{{ vcn_cidr_block }}"
    dns_label: "{{ oci.vcn.dns_label }}"
  register: vcn_createion_result

- name: "Get OCID of the Vcn"
  ansible.builtin.set_fact:
    vcn_id: "{{ vcn_createion_result.vcn.id }}"
    route_table_id: "{{ vcn_createion_result.vcn.default_route_table_id }}"
    security_list_id: "{{ vcn_createion_result.vcn.default_security_list_id }}"

- name: "Create or Update an InternetGateway"
  oracle.oci.oci_network_internet_gateway:
    compartment_id: "{{ oci.compartment_id }}"
    vcn_id: "{{ vcn_id }}"
    name: "{{ oci.internet_gateway.name }}"
    is_enabled: true
    state: 'present'
  register: ig_creation_result

- name: "Get OCID of the InternetGateway"
  ansible.builtin.set_fact:
    internet_gateway_id: "{{ ig_creation_result.internet_gateway.id }}"

- name: "Update a RouteTable"
  oracle.oci.oci_network_route_table:
    compartment_id: "{{ oci.compartment_id }}"
    vcn_id: "{{ vcn_id }}"
    id: "{{ route_table_id }}"
    name: "{{ oci.route_table.name }}"
    route_rules:
      - cidr_block: "{{ quad_zero_route }}"
        network_entity_id: "{{ internet_gateway_id }}"
    state: 'present'

- name: "Update a SecurityList"
  oracle.oci.oci_network_security_list:
    compartment_id: "{{ oci.compartment_id }}"
    vcn_id: "{{ vcn_id }}"
    id: "{{ security_list_id }}"
    name: "{{ oci.security_list.name }}"
    egress_security_rules:
      - destination: "{{ quad_zero_route }}"
        protocol: "all"
    ingress_security_rules:
      - description: "SSH"
        source: "{{ quad_zero_route }}"
        protocol: "6" # TCP
        tcp_options:
          destination_port_range:
            max: 22
            min: 22
      - description: "HTTP"
        source: "{{ quad_zero_route }}"
        protocol: "6" # TCP
        tcp_options:
          destination_port_range:
            max: 80
            min: 80
      - description: "HTTPS"
        source: "{{ quad_zero_route }}"
        protocol: "6" # TCP
        tcp_options:
          destination_port_range:
            max: 443
            min: 443
      - description: "Kubernetes API server"
        source: "{{ quad_zero_route }}"
        protocol: "6" # TCP
        tcp_options:
          destination_port_range:
            max: 6443
            min: 6443
      - description: "Kubernetes etcd server client API"
        source: "{{ quad_zero_route }}"
        protocol: "6" # TCP
        tcp_options:
          destination_port_range:
            max: 2380
            min: 2379
      - description: "Kubernetes Kubelet API"
        source: "{{ quad_zero_route }}"
        protocol: "6" # TCP
        tcp_options:
          destination_port_range:
            max: 10250
            min: 10250
      - description: "Kubernetes kube-scheduler"
        source: "{{ quad_zero_route }}"
        protocol: "6" # TCP
        tcp_options:
          destination_port_range:
            max: 10259
            min: 10259
      - description: "Kubernetes kube-controller-manager"
        source: "{{ quad_zero_route }}"
        protocol: "6" # TCP
        tcp_options:
          destination_port_range:
            max: 10257
            min: 10257
      - description: "Kubernetes NodePort Services"
        source: "{{ quad_zero_route }}"
        protocol: "6" # TCP
        tcp_options:
          destination_port_range:
            max: 32767
            min: 30000

- name: "Create a SubNet"
  oracle.oci.oci_network_subnet:
    compartment_id: "{{ oci.compartment_id }}"
    vcn_id: "{{ vcn_id }}"
    cidr_block: "{{ oci.subnet.cidr_block }}"
    dns_label: "{{ oci.subnet.dns.label }}"
    display_name: "{{ oci.subnet.name }}"
    route_table_id: "{{ route_table_id }}"
    security_list_ids: [ "{{ security_list_id }}" ]

- name: "Create a Compute Instance"
  oracle.oci.oci_compute_instance:
    availability_domain: "{{ oci.availability_domain.name }}"
    compartment_id: "{{ oci.compartment_id }}"

